@model Infraestructure.Models.ViewModel.ViewModelProducto
@{
    ViewBag.Title = "Edit";
    List<SelectListItem> categorias = (List<SelectListItem>)ViewBag.Categorias;
}

@using (Html.BeginForm("Edit", "Producto", FormMethod.Post, new { enctype = "multipart/form-data" }))
{

    <div class="form-horizontal">

        <div class="mb-5">
            <div class="form-group">
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.id, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>

        <div>
            <div class="form-group">
                <h4>
                    @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                </h4>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <hr />

        <div>
            <div class="form-group">
                <h4>
                    @Html.LabelFor(model => model.descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                </h4>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.descripcion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <hr />

        <div>
            <div class="form-group">
                @Html.LabelFor(model => model.idCategoriaToString, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.idCategoriaToString, Model.categoriasList, null, new { @class = "form-control" })
                </div>
            </div>
        </div>


        <hr />

        <div>
            <div class="form-group">
                <h4>
                    @Html.LabelFor(model => model.totalStock, htmlAttributes: new { @class = "control-label col-md-2" })
                </h4>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.totalStock, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.totalStock, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <hr />

        <div>
            <div class="form-group">
                <h4>
                    @Html.LabelFor(model => model.cantMaxima, htmlAttributes: new { @class = "control-label col-md-2" })
                </h4>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.cantMaxima, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.cantMaxima, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <hr />
        <div>
            <div class="form-group">
                <h4>
                    @Html.LabelFor(model => model.cantMinima, htmlAttributes: new { @class = "control-label col-md-2" })
                </h4>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.cantMinima, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.cantMinima, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <hr />

        <div>
            <div class="form-group">
                <h4>
                    @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                </h4>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div>
            <hr />
            <div class="form-group">
                <h4>
                    @Html.LabelFor(model => model.costoUnitario, htmlAttributes: new { @class = "control-label col-md-2" })
                </h4>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.costoUnitario, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.costoUnitario, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

    </div>
    <hr />
    <div>
        <div class="form-group">
            @Html.LabelFor(model => model.listaProveedores, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("proveedoresSeleccionados",
               (MultiSelectList)ViewBag.proveedores,
               htmlAttributes: new { @class = "form-control", multiple = "multiple" })

            </div>
        </div>
    </div>
    <hr />
    <div>
       <button class="btn btn-success" type="submit">
           Guardar Cambios
       </button>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


